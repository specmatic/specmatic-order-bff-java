import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.springframework.boot' version '3.3.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
    id 'jacoco'
}

repositories {
    mavenCentral()
    maven {
        url uri("lib")
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = true
    }
}

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.3.0')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.kafka:kafka-clients:3.7.0'
    implementation 'javax.validation:validation-api:2.0.1.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('io.specmatic:junit5-support:2.0.8')
    testImplementation('io.specmatic:specmatic-kafka:0.22.9-TRIAL') 
    testImplementation(
            'org.assertj:assertj-core:3.24.2',
            'org.junit.jupiter:junit-jupiter-api:5.10.1'
    )
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/kotlin')
            exclude '**/*.java'
            exclude '**/*.kt}'
        }
    }
}

test {
    useJUnitPlatform {
        includeEngines("junit-jupiter")
    }
    testLogging.showStandardStreams = true

    afterSuite { desc, result ->
        if (!desc.parent) {
            def resultLine = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def lineLength = resultLine.length()
            def separator = "-" * lineLength

            println separator
            println resultLine
            println separator
        }
    }

}

group = 'io.specmatic.sample'
version = '1.0'
sourceCompatibility = '17'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}
