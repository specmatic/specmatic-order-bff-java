name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: contracts changed
jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [17]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with: { fetch-depth: 0 }
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}

    - name: Build BFF project with Gradle
      run: ./gradlew build

    - name: Run coverage report
      run: ./gradlew jacocoTestReport

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2
      with:
        generate-branches-badge: true
        jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Run Specmatic Insights Github Build Reporter
      uses: specmatic/specmatic-insights-build-reporter-github-action@v2.1.0
      with:
        org-id: ${{ secrets.SPECMATIC_ORG_ID }}
        branch-name: ${{ github.ref_name }}
        repo-name: ${{ github.event.repository.name }}
        repo-id: ${{ github.repository_id }}
        repo-url: ${{ github.event.repository.html_url }}

    - name: Upload HTML Test Report
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.java }}-html-report
        path: build/reports/specmatic/html

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
